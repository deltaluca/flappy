#!/bin/bash

if [ "$1" = "uni" ]
then
	USER=${HOME:7}
	INSTDIR=/vol/bitbucket/$USER/.haxenekoflash
else
	INSTDIR=$HOME/.haxenekoflash
fi

rm -rf $INSTDIR

mkdir $INSTDIR
cd $INSTDIR

# download necessary files.
# -----------------------

# not the most recent version, a bug introduced in r4014 unexpected has issues with part of nme
# this is last version (unless it's been fixed yet, but let's be safe).
wget http://haxe.cmt.tc/linux64/haxe_r4013.tar.gz

# still need to download the normal haxe versino to get access to 'haxelib' for nme/hxcpp
# even if we then checkout most recent svn!
wget http://haxe.org/file/haxe-2.08-linux.tar.gz

# we don't actually use neko, but it's required for parts of nme. like nme build tool.
wget http://nekovm.org/_media/neko-1.8.2-linux.tar.gz

# importantly! (for at uni)
# need 32bit libgc.so.1 for haxelib and neko which are 32bit only.
wget http://ubuntu.mirror.cambrium.nl/ubuntu//pool/main/libg/libgc/libgc1c2_6.8-1.2ubuntu3_i386.deb

# extract
# -----------------------

tar xf haxe-2.08-linux.tar.gz
tar xf haxe_r4013.tar.gz
tar xf neko-1.8.2-linux.tar.gz

ar x libgc1c2_6.8-1.2ubuntu3_i386.deb
tar xf data.tar.gz
mv usr/lib/* ./
rm -rf usr

# delete
# ------------------------

rm haxe-2.08-linux.tar.gz
rm haxe_r4013.tar.gz
rm neko-1.8.2-linux.tar.gz

# similarly for my own sake
# -------------------------

mv haxe-2.08-linux haxe
mv neko-1.8.2-linux neko

# replace haxe with nightly
# ------------------------

rm haxe/haxe
rm -rf haxe/std

mv bin/haxe haxe/haxe
mv bin/std haxe/std
rm -rf bin

# add env-vars to .bashrc
# -----------------------

BASHRC=$HOME/.haxenv
rm -f $BASHRC
echo "#!/bin/bash" > $BASHRC
chmod +x $BASHRC

cd $HOME

echo "" >> $BASHRC
echo "export HAXE_LIBRARY_PATH=$INSTDIR/haxe/std:." >> $BASHRC
echo "export HAXE_HOME=$INSTDIR/haxe/" >> $BASHRC
echo "export HXCPP_COMPILE_THREADS=2" >> $BASHRC
export HAXE_LIBRARY_PATH=$INSTDIR/haxe/std:.
export HAXE_HOME=$INSTDIR/haxe/
export HXCPP_COMPILE_THREADS=2

echo "export NEKOPATH=$INSTDIR/neko" >> $BASHRC
export NEKOPATH=$INSTDIR/neko

if [ -z "$PATH" ]; then
   echo "export PATH=$INSTDIR/:$INSTDIR/haxe:$INSTDIR/neko" >> $BASHRC
   export PATH=$INSTDIR/:$INSTDIR/haxe:$INSTDIR/neko
else
   echo 'PATH=$PATH:'"$INSTDIR/:$INSTDIR/haxe:$INSTDIR/neko" >> $BASHRC
   PATH=$PATH:$INSTDIR/:$INSTDIR/haxe:$INSTDIR/neko
fi

if [ -z "$LD_LIBRARY_PATH" ]; then
   echo "export LD_LIBRARY_PATH=$INSTDIR/neko:$INSTDIR" >> $BASHRC
   export LD_LIBRARY_PATH=$INSTDIR/neko:$INSTDIR
else
   echo 'LD_LIBRARY_PATH=$LD_LIBRARY_PATH:'"$INSTDIR/neko:$INSTDIR" >> $BASHRC
   LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$INSTDIR/neko:$INSTDIR
fi

# set up hx-cpp and nme
# ---------------------

$INSTDIR/haxe/haxelib setup $INSTDIR/haxelib
$INSTDIR/haxe/haxelib install hxcpp
$INSTDIR/haxe/haxelib install nme

# get svn versions
# ----------------

cd $INSTDIR
svn checkout http://hxcpp.googlecode.com/svn/trunk/ hxcpp-svn
git clone git://github.com/deltaluca/Haxe-NME--fork-.git
mv Haxe-NME--fork- nmefork
cd $HOME

$INSTDIR/haxe/haxelib dev hxcpp $INSTDIR/hxcpp-svn/
$INSTDIR/haxe/haxelib dev nme $INSTDIR/nmefork/

# aaaaand add LD_LIBRARY_PATH for hxcpp + nme
# -------------------------------------------

echo 'LD_LIBRARY_PATH=$LD_LIBRARY_PATH:'"$INSTDIR/nmefork/ndll/Linux64/" >> $BASHRC
echo 'LD_LIBRARY_PATH=$LD_LIBRARY_PATH:'"$INSTDIR/hxcpp-svn/bin/Linux64/" >> $BASHRC
echo 'LD_LIBRARY_PATH=$LD_LIBRARY_PATH:'"$INSTDIR/nmefork/ndll/Linux/" >> $BASHRC
echo 'LD_LIBRARY_PATH=$LD_LIBRARY_PATH:'"$INSTDIR/hxcpp-svn/bin/Linux/" >> $BASHRC

# also need sdl-static to compile nme from source
# ----------------------------------------------

svn checkout http://sdl-static.googlecode.com/svn/trunk/ sdl-static

# now compile nme from fork. yum.
# -------------------------------

cd $INSTDIR
cd nmefork/project
haxelib run hxcpp Build.xml
haxelib run hxcpp Build.xml -DHXCPP_M64

